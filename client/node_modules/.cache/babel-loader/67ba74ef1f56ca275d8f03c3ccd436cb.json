{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\GIT\\\\35LGIT\\\\BruinLink\\\\client\\\\src\\\\components\\\\alertToast.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Alert, Snackbar } from \"@mui/material\";\nimport Portal from '@mui/core/Portal';\n/*\r\n* Display an alert toast at the top of the screen.\r\n* */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AlertToast extends React.Component {\n  // Defines all props\n  // Defines prop default values\n  constructor(props) {\n    super(props);\n    this.handleCloseAlert = this.handleCloseAlert.bind(this);\n  }\n\n  handleCloseAlert(event, reason) {\n    if (reason === \"clickaway\") return;\n    this.props.onClose();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Portal, {\n      children: /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: this.props.showAlert,\n        autoHideDuration: 3000,\n        onClose: this.handleCloseAlert,\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: this.props.severity,\n          children: this.props.alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nAlertToast.propTypes = {\n  // Controls if the Toast will be displayed or not\n  showAlert: PropTypes.bool.isRequired,\n  // Msg of the toast\n  alertMessage: PropTypes.string.isRequired,\n  // Callback function, should change showAlert to false\n  onClose: PropTypes.func.isRequired,\n  // One of 'error', 'info', 'success', or 'warning'.\n  // Default: 'error'.\n  severity: PropTypes.string\n};\nAlertToast.defaultProps = {\n  severity: 'error'\n};","map":{"version":3,"sources":["D:/Desktop/GIT/35LGIT/BruinLink/client/src/components/alertToast.js"],"names":["React","PropTypes","Alert","Snackbar","Portal","AlertToast","Component","constructor","props","handleCloseAlert","bind","event","reason","onClose","render","showAlert","vertical","horizontal","severity","alertMessage","propTypes","bool","isRequired","string","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,eAA9B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA;AACA;AACA;;;AACA,eAAe,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACpD;AAaA;AAKAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDD,EAAAA,gBAAgB,CAACE,KAAD,EAAQC,MAAR,EAAgB;AAC5B,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC5B,SAAKJ,KAAL,CAAWK,OAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,6BACI,QAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,SADrB;AAEI,QAAA,gBAAgB,EAAE,IAFtB;AAGI,QAAA,OAAO,EAAE,KAAKN,gBAHlB;AAII,QAAA,YAAY,EAAE;AAACO,UAAAA,QAAQ,EAAE,KAAX;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SAJlB;AAAA,+BAMI,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,QAA5B;AAAA,oBACK,KAAKV,KAAL,CAAWW;AADhB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA7CmD;AAAnCd,U,CAEVe,S,GAAY;AACf;AACAL,EAAAA,SAAS,EAAEd,SAAS,CAACoB,IAAV,CAAeC,UAFX;AAGf;AACAH,EAAAA,YAAY,EAAElB,SAAS,CAACsB,MAAV,CAAiBD,UAJhB;AAKf;AACAT,EAAAA,OAAO,EAAEZ,SAAS,CAACuB,IAAV,CAAeF,UANT;AAOf;AACA;AACAJ,EAAAA,QAAQ,EAAEjB,SAAS,CAACsB;AATL,C;AAFFlB,U,CAeVoB,Y,GAAe;AAClBP,EAAAA,QAAQ,EAAE;AADQ,C","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Alert, Snackbar} from \"@mui/material\";\r\nimport Portal from '@mui/core/Portal';\r\n\r\n/*\r\n* Display an alert toast at the top of the screen.\r\n* */\r\nexport default class AlertToast extends React.Component {\r\n    // Defines all props\r\n    static propTypes = {\r\n        // Controls if the Toast will be displayed or not\r\n        showAlert: PropTypes.bool.isRequired,\r\n        // Msg of the toast\r\n        alertMessage: PropTypes.string.isRequired,\r\n        // Callback function, should change showAlert to false\r\n        onClose: PropTypes.func.isRequired,\r\n        // One of 'error', 'info', 'success', or 'warning'.\r\n        // Default: 'error'.\r\n        severity: PropTypes.string,\r\n    }\r\n\r\n    // Defines prop default values\r\n    static defaultProps = {\r\n        severity: 'error',\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleCloseAlert = this.handleCloseAlert.bind(this);\r\n    }\r\n\r\n    handleCloseAlert(event, reason) {\r\n        if (reason === \"clickaway\") return;\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Portal>\r\n                <Snackbar\r\n                    open={this.props.showAlert}\r\n                    autoHideDuration={3000}\r\n                    onClose={this.handleCloseAlert}\r\n                    anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\r\n                >\r\n                    <Alert severity={this.props.severity}>\r\n                        {this.props.alertMessage}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Portal>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}