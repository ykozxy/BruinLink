{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\GIT\\\\35LGIT\\\\BruinLink\\\\client\\\\src\\\\components\\\\loginPage.js\";\nimport $ from \"jquery\";\nimport React from \"react\";\nimport { Box, Button, Container, Divider, TextField, Typography } from \"@mui/material\";\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport * as config from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport AlertToast from \"./alertToast\";\nimport ResetPasswordOverlay from \"./resetPasswordOverlay\";\nimport { checkEmailFormat } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      showAlert: false,\n      alertMessage: \"\",\n      emailError: false,\n      passwordError: false,\n      openPopup: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // Update this.state when user-input text changes\n    let val = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: val\n    });\n  }\n  /*\r\n  * Submit the email & password to the server\r\n  * */\n\n\n  handleSubmit(event) {\n    event.preventDefault(); // Let the login button buttonLoading\n\n    this.setState({\n      emailError: false,\n      passwordError: false\n    });\n    let url = config.baseUrl + config.api.account.login;\n    let data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    let testFail = !checkEmailFormat(data.email);\n    this.setState({\n      emailError: testFail\n    });\n\n    if (testFail) {\n      this.showAlert(\"Invalid Email format\");\n      return;\n    } // Check password length\n\n\n    testFail = data.password.length < 8;\n    this.setState({\n      passwordError: testFail\n    });\n\n    if (testFail) {\n      this.showAlert(\"Password should be at least 8 characters long.\");\n      return;\n    } // If all fields are OK, trigger loading animation of register button.\n\n\n    this.setState({\n      loading: true\n    }); // TODO: wait for backend API implementation\n\n    $.post(url, data, function (data, status, jqXHR) {\n      console.log(data);\n      console.log(status);\n      console.log(jqXHR);\n    }, \"json\").always(() => {\n      this.setState({\n        loading: false\n      });\n    }).fail(() => {\n      this.showAlert(\"Failed to connect to the server.\");\n    });\n  }\n\n  showAlert(msg) {\n    this.setState({\n      showAlert: true,\n      alertMessage: msg\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: this.handleSubmit,\n      sx: {\n        height: \"90vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        sx: {\n          mt: 10,\n          mb: 2\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: this.state.emailError,\n        required: true,\n        fullWidth: true,\n        name: \"email\",\n        label: \"Email\" // type=\"email\"\n        ,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: this.state.passwordError,\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: 0.4,\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LoadingButton // margin=\"normal\"\n          , {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              mt: 2,\n              mb: 2\n            },\n            loading: this.state.loading,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true,\n          sx: {\n            borderRightWidth: 3,\n            ml: 1,\n            mr: 1,\n            mt: 1,\n            mb: 1,\n            justifySelf: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.4,\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"or\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"./register\",\n              children: \"register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), \"\\xA0now\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertToast, {\n        showAlert: this.state.showAlert,\n        alertMessage: this.state.alertMessage,\n        onClose: () => this.setState({\n          showAlert: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => this.setState({\n            openPopup: true\n          }),\n          children: \"Forget password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResetPasswordOverlay, {\n        open: this.state.openPopup,\n        onClose: () => this.setState({\n          openPopup: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class LoginPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Desktop/GIT/35LGIT/BruinLink/client/src/components/loginPage.js"],"names":["$","React","Box","Button","Container","Divider","TextField","Typography","LoadingButton","config","Link","AlertToast","ResetPasswordOverlay","checkEmailFormat","LoginForm","Component","constructor","props","state","email","password","loading","showAlert","alertMessage","emailError","passwordError","openPopup","handleChange","bind","handleSubmit","event","val","target","value","name","setState","preventDefault","url","baseUrl","api","account","login","data","testFail","length","post","status","jqXHR","console","log","always","fail","msg","render","height","display","flexDirection","alignItems","justifyContent","mt","mb","borderRightWidth","ml","mr","justifySelf","LoginPage"],"mappings":"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","sourcesContent":["import $ from \"jquery\"\r\nimport React from \"react\";\r\nimport {Box, Button, Container, Divider, TextField, Typography} from \"@mui/material\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport * as config from \"../config\"\r\nimport {Link} from \"react-router-dom\";\r\nimport AlertToast from \"./alertToast\"\r\nimport ResetPasswordOverlay from \"./resetPasswordOverlay\";\r\nimport {checkEmailFormat} from \"../utils\";\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            showAlert: false,\r\n            alertMessage: \"\",\r\n            emailError: false,\r\n            passwordError: false,\r\n            openPopup: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Update this.state when user-input text changes\r\n        let val = event.target.value;\r\n        let name = event.target.name;\r\n\r\n        this.setState({[name]: val});\r\n    }\r\n\r\n    /*\r\n    * Submit the email & password to the server\r\n    * */\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Let the login button buttonLoading\r\n        this.setState({\r\n            emailError: false,\r\n            passwordError: false,\r\n        });\r\n\r\n        let url = config.baseUrl + config.api.account.login;\r\n        let data = {email: this.state.email, password: this.state.password}\r\n\r\n        let testFail = !checkEmailFormat(data.email);\r\n        this.setState({emailError: testFail});\r\n        if (testFail) {\r\n            this.showAlert(\"Invalid Email format\");\r\n            return;\r\n        }\r\n\r\n        // Check password length\r\n        testFail = data.password.length < 8;\r\n        this.setState({passwordError: testFail})\r\n        if (testFail) {\r\n            this.showAlert(\"Password should be at least 8 characters long.\");\r\n            return;\r\n        }\r\n\r\n        // If all fields are OK, trigger loading animation of register button.\r\n        this.setState({loading: true});\r\n\r\n        // TODO: wait for backend API implementation\r\n        $.post(url, data, function (data, status, jqXHR) {\r\n            console.log(data);\r\n            console.log(status);\r\n            console.log(jqXHR)\r\n        }, \"json\")\r\n            .always(() => {\r\n                this.setState({loading: false});\r\n            })\r\n            .fail(() => {\r\n                this.showAlert(\"Failed to connect to the server.\");\r\n            });\r\n    }\r\n\r\n    showAlert(msg) {\r\n        this.setState({\r\n            showAlert: true,\r\n            alertMessage: msg,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={this.handleSubmit}\r\n                sx={{\r\n                    height: \"90vh\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography variant=\"h3\" sx={{mt: 10, mb: 2}}>\r\n                    Login\r\n                </Typography>\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    error={this.state.emailError}\r\n                    required\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    // type=\"email\"\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    error={this.state.passwordError}\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <Box\r\n                    width={1}\r\n                    sx={{display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-evenly\"}}>\r\n\r\n                    <Box width={0.4} sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"flex-end\"\r\n                    }}>\r\n                        <LoadingButton\r\n                            // margin=\"normal\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            sx={{mt: 2, mb: 2}}\r\n                            loading={this.state.loading}\r\n                        >\r\n                            <Typography variant=\"h6\">Login</Typography>\r\n                        </LoadingButton>\r\n                    </Box>\r\n\r\n                    <Divider orientation=\"vertical\" flexItem\r\n                             sx={{borderRightWidth: 3, ml: 1, mr: 1, mt: 1, mb: 1, justifySelf: \"center\"}}/>\r\n\r\n                    <Box width={0.4} sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"flex-start\"\r\n                    }}>\r\n                        <Typography variant=\"h6\">\r\n                            or&nbsp;\r\n                            <Link to=\"./register\">\r\n                                register\r\n                            </Link>\r\n                            &nbsp;now\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <AlertToast\r\n                    showAlert={this.state.showAlert}\r\n                    alertMessage={this.state.alertMessage}\r\n                    onClose={() => this.setState({showAlert: false})}\r\n                />\r\n\r\n                <Typography variant=\"h6\">\r\n                    <Button variant=\"text\" onClick={() => this.setState({openPopup: true})}>\r\n                        Forget password?\r\n                    </Button>\r\n                </Typography>\r\n\r\n                <ResetPasswordOverlay\r\n                    open={this.state.openPopup}\r\n                    onClose={() => this.setState({openPopup: false})}\r\n                />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default class LoginPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <LoginForm/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}