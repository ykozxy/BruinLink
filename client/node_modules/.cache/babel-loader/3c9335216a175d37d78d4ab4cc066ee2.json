{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\GIT\\\\35LGIT\\\\BruinLink\\\\client\\\\src\\\\components\\\\registerPage.js\";\nimport $ from \"jquery\";\nimport React from \"react\";\nimport { Box, Container, Divider, TextField, Typography } from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { Link } from \"react-router-dom\";\nimport * as config from \"../config\";\nimport { checkEmailFormat } from \"../utils\";\nimport AlertToast from \"./alertToast\";\nimport VerificationCodeInput from \"./verificationCodeInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      verPassword: \"\",\n      sessionID: \"\",\n      verCode: \"\",\n      alertMessage: \"\",\n      showAlert: false,\n      buttonLoading: false,\n      emailError: false,\n      passwordError: false,\n      verPasswordError: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.checkEmail = this.checkEmail.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Let the register button buttonLoading\n\n    this.setState({\n      emailError: false,\n      passwordError: false,\n      verPasswordError: false\n    });\n    let url = config.baseUrl + config.api.account.register;\n    let data = {\n      email: this.state.email,\n      password: this.state.password,\n      verCode: this.state.verCode,\n      sessionID: this.state.sessionID\n    }; // Check email address\n\n    if (!this.checkEmail(data.email)) {\n      this.showAlert(\"Invalid email format.\");\n      return;\n    } // Check password length\n\n\n    let testFail = data.password.length < 8;\n    this.setState({\n      passwordError: testFail\n    });\n\n    if (testFail) {\n      this.showAlert(\"Password should be at least 8 characters long.\");\n      return;\n    } // Check password verification field\n\n\n    testFail = data.password !== this.state.verPassword;\n    this.setState({\n      passwordError: testFail,\n      verPasswordError: testFail\n    });\n\n    if (testFail) {\n      this.showAlert(\"Passwords mismatch.\");\n      return;\n    } // If all fields are OK, trigger loading animation of register button.\n\n\n    this.setState({\n      buttonLoading: true\n    }); // TODO: wait for backend API implementation\n\n    $.post(url, data, function (data, status, jqXHR) {\n      console.log(data);\n      console.log(status);\n      console.log(jqXHR);\n    }, \"json\").always(() => this.setState({\n      buttonLoading: false\n    })).fail(() => {\n      this.showAlert(\"Failed to connect to the server.\");\n    });\n  }\n\n  handleChange(event) {\n    // Update this.state when user-input text changes\n    let val = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: val\n    });\n  }\n  /*\r\n  * Check if the input email is valid, and update this.state.emailError.\r\n  * */\n\n\n  checkEmail(email) {\n    let res = checkEmailFormat(email);\n    this.setState({\n      emailError: !res\n    });\n    return res;\n  }\n\n  showAlert(msg) {\n    this.setState({\n      showAlert: true,\n      alertMessage: msg\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: this.handleSubmit,\n      sx: {\n        height: \"90vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        sx: {\n          mt: 10,\n          mb: 2\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        error: this.state.emailError,\n        name: \"email\",\n        label: \"Email\" // type=\"email\"\n        ,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        error: this.state.passwordError,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        error: this.state.verPasswordError,\n        name: \"verPassword\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerificationCodeInput, {\n        onChange: this.handleChange,\n        email: this.state.email,\n        checkEmailCallback: this.checkEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: 0.4,\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n            margin: \"normal\",\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              mt: 2,\n              mb: 2\n            },\n            loading: this.state.buttonLoading,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true,\n          sx: {\n            borderRightWidth: 3,\n            ml: 1,\n            mr: 1,\n            mt: 1,\n            mb: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: 0.4,\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"or back to\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertToast, {\n        alertMessage: this.state.alertMessage,\n        showAlert: this.state.showAlert,\n        onClose: () => this.setState({\n          showAlert: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class RegisterPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Desktop/GIT/35LGIT/BruinLink/client/src/components/registerPage.js"],"names":["$","React","Box","Container","Divider","TextField","Typography","LoadingButton","Link","config","checkEmailFormat","AlertToast","VerificationCodeInput","RegisterForm","Component","constructor","props","state","email","password","verPassword","sessionID","verCode","alertMessage","showAlert","buttonLoading","emailError","passwordError","verPasswordError","handleSubmit","bind","handleChange","checkEmail","event","preventDefault","setState","url","baseUrl","api","account","register","data","testFail","length","post","status","jqXHR","console","log","always","fail","val","target","value","name","res","msg","render","height","display","flexDirection","alignItems","justifyContent","mt","mb","borderRightWidth","ml","mr","RegisterPage"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\r\nimport React from \"react\";\r\nimport {Box, Container, Divider, TextField, Typography} from \"@mui/material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport {Link} from \"react-router-dom\";\r\nimport * as config from \"../config\"\r\nimport {checkEmailFormat} from \"../utils\";\r\nimport AlertToast from \"./alertToast\";\r\nimport VerificationCodeInput from \"./verificationCodeInput\";\r\n\r\n\r\nclass RegisterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            verPassword: \"\",\r\n            sessionID: \"\",\r\n            verCode: \"\",\r\n\r\n            alertMessage: \"\",\r\n            showAlert: false,\r\n\r\n            buttonLoading: false,\r\n            emailError: false,\r\n            passwordError: false,\r\n            verPasswordError: false,\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.checkEmail = this.checkEmail.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Let the register button buttonLoading\r\n        this.setState({\r\n            emailError: false,\r\n            passwordError: false,\r\n            verPasswordError: false,\r\n        });\r\n\r\n        let url = config.baseUrl + config.api.account.register;\r\n        let data = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            verCode: this.state.verCode,\r\n            sessionID: this.state.sessionID,\r\n        };\r\n\r\n        // Check email address\r\n        if (!this.checkEmail(data.email)) {\r\n            this.showAlert(\"Invalid email format.\")\r\n            return;\r\n        }\r\n\r\n        // Check password length\r\n        let testFail = data.password.length < 8;\r\n        this.setState({passwordError: testFail});\r\n        if (testFail) {\r\n            this.showAlert(\"Password should be at least 8 characters long.\")\r\n            return;\r\n        }\r\n\r\n        // Check password verification field\r\n        testFail = data.password !== this.state.verPassword;\r\n        this.setState({passwordError: testFail, verPasswordError: testFail});\r\n        if (testFail) {\r\n            this.showAlert(\"Passwords mismatch.\");\r\n            return;\r\n        }\r\n\r\n        // If all fields are OK, trigger loading animation of register button.\r\n        this.setState({\r\n            buttonLoading: true,\r\n        });\r\n\r\n        // TODO: wait for backend API implementation\r\n        $.post(url, data, function (data, status, jqXHR) {\r\n            console.log(data);\r\n            console.log(status);\r\n            console.log(jqXHR);\r\n        }, \"json\")\r\n            .always(() => this.setState({buttonLoading: false}))\r\n            .fail(() => {\r\n                this.showAlert(\"Failed to connect to the server.\");\r\n            });\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Update this.state when user-input text changes\r\n        let val = event.target.value;\r\n        let name = event.target.name;\r\n\r\n        this.setState({[name]: val});\r\n    }\r\n\r\n    /*\r\n    * Check if the input email is valid, and update this.state.emailError.\r\n    * */\r\n    checkEmail(email) {\r\n        let res = checkEmailFormat(email);\r\n        this.setState({emailError: !res});\r\n        return res;\r\n    }\r\n\r\n    showAlert(msg) {\r\n        this.setState({\r\n            showAlert: true,\r\n            alertMessage: msg,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={this.handleSubmit}\r\n                sx={{\r\n                    height: \"90vh\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography variant=\"h3\" sx={{mt: 10, mb: 2}}>\r\n                    Register\r\n                </Typography>\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    error={this.state.emailError}\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    // type=\"email\"\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    error={this.state.passwordError}\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    error={this.state.verPasswordError}\r\n                    name=\"verPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <VerificationCodeInput onChange={this.handleChange}\r\n                                       email={this.state.email}\r\n                                       checkEmailCallback={this.checkEmail}/>\r\n\r\n                <Box width={1}\r\n                     sx={{\r\n                         display: \"flex\",\r\n                         flexDirection: \"row\",\r\n                         alignItems: \"center\",\r\n                         justifyContent: \"space-evenly\",\r\n                         mt: 1\r\n                     }}>\r\n                    <Box width={0.4} sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"flex-end\"\r\n                    }}>\r\n                        <LoadingButton\r\n                            margin=\"normal\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            sx={{mt: 2, mb: 2}}\r\n                            loading={this.state.buttonLoading}\r\n                        >\r\n                            <Typography variant=\"h6\">Register</Typography>\r\n                        </LoadingButton>\r\n                    </Box>\r\n\r\n                    <Divider orientation=\"vertical\" flexItem\r\n                             sx={{borderRightWidth: 3, ml: 1, mr: 1, mt: 1, mb: 1}}/>\r\n\r\n                    <Box width={0.4} sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"flex-start\"\r\n                    }}>\r\n                        <Typography variant=\"h6\">\r\n                            or back to&nbsp;\r\n                            <Link to=\"/login\">\r\n                                login\r\n                            </Link>\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <AlertToast alertMessage={this.state.alertMessage} showAlert={this.state.showAlert}\r\n                            onClose={() => this.setState({showAlert: false})}/>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default class RegisterPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <RegisterForm/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}